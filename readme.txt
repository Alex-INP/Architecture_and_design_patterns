Входная точка gunicorn - main:application

Контроллеры
______________________________________________________________________________________________________________
В директории controllers в файле custom_controllers.py создаются контроллеры. Все они создаются в виде классов,
которые наследуются от master_controllers.BasicController. Для их минимальной работы необходимо вызвать
super().__init__, задать атрибут экземпляра self.template (путь к шаблону) и self.context (аргументы для jinja2)
в виде словаря. Все контроллеры, созданные таким образом, поддерживают метод GET и  POST. В дальнейшем будет добавлена
поддержка расширения количества обрабатываемых пользователем методов.

Шаблоны
______________________________________________________________________________________________________________
Шаблоны должны быть организованы так: в корневом каталоге программы должна лежать папка templates, в ней
уже находится папка global_templates, но пользователи могут создавать собственные папки в templates
для хранения шаблонов под разные логические части приложения. Более глубокую вложенность делать нельзя.
Пример:

application
    |
    |-templates
        |
        |-global_templates
        |-your_directory_with_templates

В каждой крайней директории хранятся сами шаблоны. Поэтому атрибут при контроллере следует задавать так:
self.template = "mytmpldir/template.html"
Или так:
self.template = "template.html"
Во втором случае, шаблон должен находиться в папке global_templates.

Пути
______________________________________________________________________________________________________________
В документе page_urls.py в директории urls определена переменная registered_urls, которая является списком,
хранящим списки. Последние состоят из двух элементов: подключаемого url'а и ответственного за его обработку
контроллера в виде класса, который импортируется из документов папки controllers, в которой пользователь
может создавать свои контроллеры. Важное замечание, пути не должны оканчиваться на "/".